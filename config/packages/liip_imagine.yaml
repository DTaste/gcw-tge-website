##https://symfony.com/doc/master/bundles/LiipImagineBundle/configuration.html
liip_imagine:
    # valid drivers options include "gd" or "gmagick" or "imagick"
    driver: "gd"
    cache:                default
    data_loader:          default
    #default_image:        null
    #controller:
    #    filter_action:         liip_imagine.controller:filterAction
    #    filter_runtime_action: liip_imagine.controller:filterRuntimeAction



    resolvers:
        default:
            web_path:
                web_root: '%kernel.root_dir%/../public'
                cache_prefix: /media/cache

#    loaders:
#        default:
#            filesystem:
#                data_root: ~  # %kernel.root_dir%/../web/


    # define your filter sets under this option
    filter_sets:

        thumb:
          # set your image quality defaults
          jpeg_quality:          85
          png_compression_level: 8
          filters:
            auto_rotate: ~
            strip: ~
            thumbnail:
              size: [250, 118]
              dim: [250, 118]
              allow_upscale: false
              mode:          outbound




        facebook_share:
          # set your image quality defaults
          jpeg_quality:          100
          png_compression_level: 9
          filters:
            auto_rotate: ~
            strip: ~
            scale:
              dim: [1200, 628]
              allow_upscale: true
              mode:          inbound


        # an example thumbnail transformation definition
        # https://symfony.com/doc/current/bundles/LiipImagineBundle/basic-usage.html#create-thumbnails
        squared_thumbnail:

            # set your image quality defaults
            jpeg_quality:          85
            png_compression_level: 8

            # setup the filter steps to apply for this transformation
            filters:
                # auto rotate the image using EXIF metadata
                auto_rotate: ~

                # strip the image of all metadata
                strip: ~

                # scale and square the image to the given dimensions
                thumbnail:
                    size:          [253, 253]
                    mode:          outbound
                    allow_upscale: true

                # create border by placing image on larger black background
                background:
                    size:     [256, 256]
                    position: center
                    color:    '#fff'
